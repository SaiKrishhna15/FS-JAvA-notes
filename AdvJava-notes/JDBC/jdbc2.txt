To use any JDBC driver we need to register with DriverManager service.

Every JDBC application contains one built-in service called DriverManager service.


Class.forName()
===============
It is always recommanded to use Class.forName() to register JDBC driver with DriverManager service.

It is used to load the driver class but it won't create an object.

ex:
	Class.forName("driver-class-name");

Connection object
=================
Connection is an interface which is present in java.sql package.

It is an object of underlying supplied java class which implements java.sql.Connection interface.

To perform any operation in a database we need to establish the connection with database. 

Once the work with database is completed we need to close the connection.

ex:
	Connection con;

DriverManager.getConnection()
=============================
A DriverManager is a class which is present in java.sql package.

A getConnection() method is used to interact with database software and returns JDBC Connection 
representing connectivity between java application and database software.

ex:
	Connection con = DriverManager.getConnection("driver-url","db-user","db-password");


Statement object
=================
A Statement is an interface which is present in java.sql package.

It is an object of underlying supplied java class which implements java.sql.Statement interface.

It acts like a vehicle between java application and database software.

It is used to sends and executes SQL query in database software.

ex:
	Statement st = con.createStatement(); 


ResultSet object
================
A ResultSet is an interface which is present in java.sql package.

Every ResultSet having two positions.

1) BFR  (Before First Record/Row)

2) ALR  (After Last Record/Row)

By default every record pointer points to BFR position.

rs.next()
=========
It is used to move the record pointer to next position from current position. If next position is 
record then it returns true. If next position is ALR then returns false.

Every record ResultSet having 1 as base index and every column of record ResultSet having 1 as column index.

To read values from record ResultSet we need to use getXxx() methods with index numbers or column names.

Here getXxx() methods means getInt(),getString(),getFloat(),getDouble() and etc.


Types of Queries 
=================
According to JDBC point of view , we have two queries.

1) Select query 

2) Non-select query 

1) Select query 
-----------------
A select query gives bunch of records from database software.
ex:
	select * from student;

A JDBC Statement object gave executeQuery() method to execute select query.
ex:
	ResultSet rs= st.executeQuery("select * from student");


2) Non-select query
--------------------
A non-select query returns numeric value representing number of records effecting in database table.
ex:
	delete from student;

A JDBC Statement object gave executeUpdate() method to execute non-select query. 
ex:
	int result = st.executeUpdate("delete from student");

Type4 JDBC Driver Database Properties 
======================================
Driver 		  : oracle.jdbc.driver.OracleDriver

URL 		  : jdbc:oracle:thin:@localhost:1521:ORCL

Database username : system 

Database password : admin 

How many steps are there to develop JDBC application 
=====================================================
We have six steps to develop JDBC application.

1) Register JDBC driver with DriverManager service.

2) Establish the connection with database software.

3) Create Statement object.

4) Sends and Executes SQL query in database software.

5) Gather the result from database software to process the result.

6) Close all jdbc connection objects.



Eclipse 
========
IDE		:	JEE 

Flavours	:	Luna, Indigo, Mars, Keplar and etc.

Vendor		:	Eclipse Foundation 

Website		:	www.eclipse.org

Format		:	Zip 

Download link   : 
https://drive.google.com/file/d/1c8TAX048EjAubIFByqZ0DzWZI3oKuauR/view?usp=drive_link


Steps to develop first JDBC application to select the records from student table using eclipse IDE
==================================================================================================
step1:
------
	Create a student table with records inside oracle database.
	ex:	
		drop table student;
		create table student(sno number(3),sname varchar2(10),sadd varchar2(12));
		insert into student values(101,'raja','hyd');
		insert into student values(102,'ravi','delhi');
		insert into student values(103,'ramana','vizag');
		commit;	

step2:
------
	Launch eclipse IDE by choosing workspace location.
	
step3:
------
	Create a java project inside eclipse IDE.
	ex:
		File --> new --> Project --> Java Project --> Next -->
		Name : IH-JAVA-047 --> Next --> Finish.

step4:
-----
	Download ojdbc11.jar or ojdbc14.jar file from below link.
	ex:
		https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc11/23.2.0.0/
	
step5:
-----
	Add ojdbc11.jar file to project build path.
	ex:
		right click to IH-JAVA-047 project --> build path --> configure build path -->
		libraries --> select classpath --> click to add external jars --> select ojdbc11.jar 
		file --> Apply and close.
	
step6:
------
	Create a "com.ihub.www" package inside "src" folder.


step7:
------
	Create a SelectApp.java file inside "com.ihub.www" package.

SelectApp.java
---------------
package com.ihub.www;

//ctrl+shift+O
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class SelectApp 
{
	public static void main(String[] args)throws Exception  
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:ORCL","system","admin");
		Statement st = con.createStatement();
		
		String qry ="select * from student";
		ResultSet rs = st.executeQuery(qry);
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
		}
		rs.close();
		st.close();
		con.close();
	}
}

step8:
------
	Run JDBC application.


Q) Write a jdbc application to record student name and student address from student table?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class SelectApp2 
{
	public static void main(String[] args)throws Exception  
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:ORCL","system","admin");
		Statement st = con.createStatement();
		
		String qry = "select sname,sadd from student"; 
		ResultSet rs = st.executeQuery(qry);
		while(rs.next())
		{
			System.out.println(rs.getString(1)+" "+rs.getString(2));
		}
		rs.close();
		st.close();
		con.close();
	} 
}

Q) Write a jdbc application to select the student record based on student number?

package com.ihub.www;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Scanner;

public class SelectApp3 
{
	public static void main(String[] args)throws Exception  
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the student no :");
		int no = sc.nextInt();
		
		Class.forName("oracle.jdbc.driver.OracleDriver");
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:ORCL","system","admin");
		Statement st = con.createStatement();
		
		String qry="select * from student where sno="+no;
		
		ResultSet rs = st.executeQuery(qry);
		
		int cnt=0;
		while(rs.next())
		{
			System.out.println(rs.getInt(1)+" "+rs.getString(2)+" "+rs.getString(3));
			cnt=1;
		}
		
		if(cnt==0)
			System.out.println("No rows selected");
		
		rs.close();
		st.close();
		con.close();
	}
}































































