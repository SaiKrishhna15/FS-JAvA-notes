Expression Tag 
==============
The code which is written in expression tag will return the output stream of a response so we don't need to use out.println() to print the data.

syntax:
------
	<%=   code here %>

Note:
----
	Expression tag does not allow semicolon.

Deployment Directory Structure 
------------------------------
JspApp3
|
|---Java Resources
|
|---WebContent
	|
	|---form.html 
	|---process.jsp 
	|
	|---WEB-INF
		|
		|--web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
----------
<form action="process.jsp">
	
	Name : <input type="text" name="t1"/> 
	
	<input type="submit" value="submit"/>
	
</form>

proces.jsp
---------
<center>
	<h1>
		<%
			String name = request.getParameter("t1");
		%>
		
		<%= "Welcome :"+name %>
	</h1>
</center>

web.xml 
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url 
----------
	http://localhost:2525/JspApp3/


Declaration Tag 
================
Declaration tag is used to declare fields and methods.

syntax:
------
	<%! code here %> 

Deployment Directory Structure 
-----------------------------
JspApp4
|
|---Java Resources
|
|---WebContent 
	|
	|---process.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
------
In above application we need to add "servlet-api.jar" file in project build path.

process.jsp
------------
<%!
	int i = 100;

	int cube(int n)
	{
		return n*n*n;
	}
%>
<center>
	<h1>
			<%= "The value is ="+i %>
			<br>
			<%= "Cube of a given number is ="+cube(5) %>
	</h1>
</center>

web.xml 
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 
 	<welcome-file-list>
 		<welcome-file>process.jsp</welcome-file>
 	</welcome-file-list>
 
</web-app>

Request url
------------
	http://localhost:2525/JspApp4/



Exception Handling in JSP 
=========================
Exceptions may raised anytime in our application. So handling exceptions is always safer side for the programmer. 

Runtime errors are called exceptions.

There are two ways to handle the exceptions in JSP.

1) By using errorPage and isErrorPage attribute of page directive tag.

2) By using <error-page> element of web.xml file.


1) By using errorPage and isErrorPage attribute of page directive tag
---------------------------------------------------------------------

Deployment Directory Structure 
------------------------------
JspApp5
|
|---Java Resources
|
|---Web Content 
	|
	|---form.html 
	|---process.jsp 
	|---error.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
---------
<form action="process.jsp">

	No1: <input type="text" name="t1"/> <br>
	
	No2: <input type="text" name="t2"/> <br> 
	
	<input type="submit" value="divide"/>
</form>

web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp 
------------
<%@page errorPage="error.jsp" %>
<%
	String sno1 = request.getParameter("t1");
	String sno2 = request.getParameter("t2");
	
	//convert string to int 
	int a = Integer.parseInt(sno1);
	int b = Integer.parseInt(sno2);
	
	int c = a / b;
%>
<center>
	<h1>
		<%= "Division of two numbers is ="+c %>
	</h1>
</center>

error.jsp 
-----------
<%@page  isErrorPage="true" %>

<center>
	<b>
		Sorry! Exception has occurred  <br>
		
		<%= exception %>
	</b>
</center>

request url 
--------
	http://localhost:2525/JspApp5/




2) By using <error-page> element of web.xml file
--------------------------------------------------
This approach is recommanded to use because we don't need to defined errorPage attribute in each JSP page. Defining single entry of <error-page> element in web.xml file will handle all types of exceptions.


Deployment Directory Structure 
------------------------------
JspApp5
|
|---Java Resources
|
|---Web Content 
	|
	|---form.html 
	|---process.jsp 
	|---error.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.

form.html
---------
<form action="process.jsp">

	No1: <input type="text" name="t1"/> <br>
	
	No2: <input type="text" name="t2"/> <br> 
	
	<input type="submit" value="divide"/>
</form>

web.xml 
--------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <error-page>
  	<exception-type>java.lang.Exception</exception-type>
  	<location>/error.jsp</location>
  </error-page>
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp 
------------
<%
	String sno1 = request.getParameter("t1");
	String sno2 = request.getParameter("t2");
	
	//convert string to int 
	int a = Integer.parseInt(sno1);
	int b = Integer.parseInt(sno2);
	
	int c = a / b;
%>
<center>
	<h1>
		<%= "Division of two numbers is ="+c %>
	</h1>
</center>

error.jsp 
-----------
<%@page  isErrorPage="true" %>

<center>
	<b>
		Sorry! Exception has occurred  <br>
		
		<%= exception %>
	</b>
</center>

request url 
--------
	http://localhost:2525/JspApp5/



JSP to Database Communication 
=============================

Deployment Directory Structure 
------------------------------
JspApp6
|
|---Java Resources
|
|---WebContent 
	|
	|---form.html 
	|---process.jsp 
	|
	|---WEB-INF
		|
		|------web.xml 
		|------lib
			|
			|---ojdbc14.jar 
Note:
-----
In above application we need to add "servlet-api.jar" and "ojdbc14.jar" file in project build path.

Copy and paste "ojdbc14.jar" file inside "WEB-INF/lib" folder seperately.	


student table 
============
drop table student;

create table student(sno number(3),sname varchar2(10),sadd varchar2(12));

form.html 
----------

<form action="process.jsp">

	No: <input type="text" name="t1"/>  <br>
	
	Name: <input type="text" name="t2"/>  <br>
	
	Address: <input type="text" name="t3"/> <br>
	
	<input type="submit" value="submit"/>

</form>
 
web.xml 
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>form.html</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp
------------

<%@page import="java.sql.*"  buffer="8kb" language="java" %>
<%
	//reading form data 
	String sno = request.getParameter("t1");
	int no = Integer.parseInt(sno);
	
	String name = request.getParameter("t2");
	
	String add = request.getParameter("t3");
	
	//store the data in a database
	Connection con = null;
	PreparedStatement ps =null;
	int result = 0;
	String qry = null;
	try
	{
		Class.forName("oracle.jdbc.driver.OracleDriver");
		
		con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
		
		qry = "insert into student values(?,?,?)";
		
		ps = con.prepareStatement(qry);
		
		//set the values 
		ps.setInt(1,no);
		ps.setString(2,name);
		ps.setString(3,add);
		
		//execute 
		result = ps.executeUpdate();
		
		if(result==0)
			out.println("No Record Inserted");
		else
			out.println("Record Inserted");
		
		ps.close();
		con.close();
	}
	catch(Exception e)
	{
		out.println(e); 
	}
%>

Request url 
----------
	http://localhost:2525/JspApp6/
 










































