JSP application to fetch the data from database 
===============================================

Deployment Directory Structure 
-------------------------------
JspApp7
|
|---Java Resources
|
|---Web Content
	|
	|---process.jsp 
	|
	|---WEB-INF
		|
		|-----web.xml 
		|-----lib
			|
			|---ojdbc14.jar 
Note:
-----
In above application we need to add "servlet-api.jar" and "ojdbc14.jar" file in project build path.

Copy and paste "ojdbc14.jar" file inside "WEB-INF/lib" folder seperately.

process.jsp
-----------

<%@page import="java.sql.*" %>

<center>
	<h2>
		<a href="process.jsp?t1=true"> Fetch Details </a>
	</h2>
</center>

<hr>

<table align="center" width="100%" border="1">
	<tr>
		<th>No</th>
		<th>Name</th>
		<th>Address</th>
	</tr>
<%
	if("true".equals(request.getParameter("t1")))
	{
		Connection con =null;
		Statement st = null;
		ResultSet rs = null;
		String qry = null;
		try
		{
			Class.forName("oracle.jdbc.driver.OracleDriver");
			con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","system","admin");
			st = con.createStatement();
			qry = "select * from student";
			rs = st.executeQuery(qry);
			while(rs.next())
			{
	%>
			<tr>
					<td><%= rs.getInt(1) %></td>
					<td><%= rs.getString(2) %></td>
					<td><%= rs.getString(3) %></td>
			</tr>
	
	<%			
			}
			
			rs.close();
			st.close();
			con.close();
		}
		catch(Exception e)
		{
			out.println(e); 
		}
	}
%>

</table>

web.xml 
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>process.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>


Request url 
-----------
	http://localhost:2525/JspApp7/


Action Tags
============
Action tags are used to perform perticular operations.

Action tags are used to control flow of the pages and uses java bean.

Action tags internally uses servlet API functionality.

Action tags are executed dynamically at runtime.

Action tags are divided into two types.

1) Standard Action tags 

2) Custom Action tags 


1) Standard Action tags 
------------------------
Built-in tags are called standard action tags.

We have following list of standard action tags.

ex:
	<jsp:forward>
	<jsp:include>
	<jsp:useBean>
	<jsp:setProperty>
	<jsp:getProperty>
	and etc.



Action forward tag 
==================
In action forward tag, the output of source JSP program discarded and output of destination JSP program goes to browser window as dynamic response.

It internally uses servlet API functionality called rd.forward(req,res).

syntax:
-------
		<jsp:forward  page="page_name"/>


Deployment Directory Structure 
------------------------------
JspApp8
|
|---Java Resources
|
|---WebContent
	|
	|---A.jsp 
	|---B.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" in project build path.

A.jsp
-----
<b><i> Beginning of A.jsp</i></b>
<br>
<jsp:forward page="B.jsp"/>
<br>
<b><i> Ending of A.jsp</i></b>

B.jsp
------
<b><i> This is B.jsp </i></b>

web.xml 
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>A.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
----------
	http://localhost:2525/JspApp8/



Action include tag 
===================
In action include, the output of source JSP program and destination JSP program combinely goes to browser window as dynamic response.

It internally uses servlet API functionality called rd.include(req,res).

syntax:
------
	<jsp:include page="page_name" />

Deployment Directory Structure 
------------------------------
JspApp8
|
|---Java Resources
|
|---WebContent
	|
	|---A.jsp 
	|---B.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" in project build path.

A.jsp
-----
<b><i> Beginning of A.jsp</i></b>
<br>
<jsp:include page="B.jsp"/>
<br>
<b><i> Ending of A.jsp</i></b>

B.jsp
------
<b><i> This is B.jsp </i></b>

web.xml 
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>A.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

Request url
----------
	http://localhost:2525/JspApp8/

JSP to JavaBean Communication 
============================
JSP to java bean communication is possible by using three tags.

1) <jsp:useBean> tag 
-------------------
	It is used to create and locate bean class object.

2) <jsp:setProperty> tag 
---------------------------
	It is used to set the values to bean object and calls setter methods.

3) <jsp:getProperty> tag 
----------------------
	It is used to get the values from bean object and calls getter methods.
Note:
----
	All the above tags are independent tags.

Example1:
---------
Deployment Directory Structure 
-------------------------------
JspApp9
|
|---Java Resources
	|	
	|-------src
		|
		|---com.ihub.www
			|
			|---CubeNumber.java
|---WebContent 
	|
	|---process.jsp 
	|---WEB-INF
		|
		|---web.xml 
Note:
----
In above application we need to add "servlet-api.jar" file in project build path.


CubeNumber.java
---------------
package com.ihub.www;

public class CubeNumber 
{
	public int cube(int n)
	{
		return n*n*n;
	}
}

web.xml 
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
  
  <welcome-file-list>
  	<welcome-file>process.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

process.jsp
------------
<jsp:useBean id="cn" class="com.ihub.www.CubeNumber"></jsp:useBean>

<%= "Cube of a given number is : "+cn.cube(5) %>


Request url 
----------
	http://localhost:2525/JspApp9/



Example2
---------

Deployment Directory Structure 
------------------------------
JspApp10
|
|---Java Resources
	|
	|----com.ihub.www
		|
		|---User.java
|---WebContent
	|
	|---form.html 
	|---process.jsp 
	|
	|---WEB-INF
		|
		|---web.xml 
Note:
-----
In above application we need to add "servlet-api.jar" file in project build path.


form.html
---------

<form action="process.jsp">
	
	UserName: <input type="text" name="username"/> <br>
	
	Password: <input type="password" name="password"/> <br>
	
	Email: <input type="text" name="email"/> <br>
	
	<input type="submit" value="submit"/>
	
</form>

User.java
----------
package com.ihub.www;

public class User 
{
	private String username;
	private String password;
	private String email;
	
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	
}

web.xml 
---------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 
 <welcome-file-list>
 	<welcome-file>form.html</welcome-file>
 </welcome-file-list>
  
</web-app>

process.jsp
-------------

<jsp:useBean id="u" class="com.ihub.www.User"></jsp:useBean>

<jsp:setProperty property="*" name="u"/>

Records are : <br>

UserName : <jsp:getProperty property="username" name="u"/> <br>
Password : <jsp:getProperty property="password" name="u"/> <br>
Email : <jsp:getProperty property="email" name="u"/> <br>

Request url
-----------
	http://localhost:2525/JspApp10/




2) Custom Action tags 
======================
Tags which are created by the user based on the application requirements are called custom tags.

To create custom tags in JSP we need to use taglib directive.

syntax:
------
	<%@ taglib uri="URI_OF_TAG_LIBRARY" prefix="PREFIX_FOR_LIBRARY" %>

To configure tag information we need to use TLD file.

TLD stands for Tag library descriptor.

Deployment Directory Structure 
------------------------------
JspApp11
|
|---Java Resources
	|
	|----com.ihub.www
		|
		|---CubeNumber.java
|---WebContent
	|
	|---process.jsp 
	|
	|---WEB-INF
		|
		|------mytags.tld
		|------web.xml
		|------lib
			|
			|---jsp-api.jar 
Note:
-----
In above application we need to add "servlet-api.jar" and "jsp-api.jar" file in project build path.

Copy and paste "jsp-api.jar" file inside "WEB-INF/lib" folder seperately.

process.jsp
-----------
<%@taglib uri="/WEB-INF/mytags.tld" prefix="ihub" %>

Cube of a given number is : <ihub:cube number="5" />

web.xml
-------
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">
 
  <welcome-file-list>
  	<welcome-file>process.jsp</welcome-file>
  </welcome-file-list>
  
</web-app>

mytags.tld
------------
<?xml version="1.0" encoding="ISO-8859-1" ?>  
<!DOCTYPE taglib  
        PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"  
    "http://java.sun.com/j2ee/dtd/web-jsptaglibrary_1_2.dtd">  
  
<taglib>  
  
  <tlib-version>1.0</tlib-version>  
  <jsp-version>1.2</jsp-version>  
  <short-name>simple</short-name>  
  <uri>http://tomcat.apache.org/example-taglib</uri>  
  
  <tag>
  		<name>cube</name>
  		<tag-class>com.ihub.www.CubeNumber</tag-class>
  		<attribute>
  			<name>number</name>
  			<required>true</required>
  		</attribute>
  </tag>
  
    
</taglib>  

CubeNumber.java
-----------
package com.ihub.www;

import javax.servlet.jsp.JspException;
import javax.servlet.jsp.JspWriter;
import javax.servlet.jsp.tagext.TagSupport;

public class CubeNumber extends TagSupport
{
	private int number;
	
	//setter method 
	public void setNumber(int number)
	{
		this.number=number;
	}
	
	public int doStartTag()throws JspException
	{
		try
		{
			JspWriter out = pageContext.getOut();
			out.println(number * number * number);
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
		
		return SKIP_BODY;
	}
}

Request url 
------------
	http://localhost:2525/JspApp11/




























































