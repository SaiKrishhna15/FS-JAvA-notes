Identifiers 
============
A name in java is called identifier.

It can be variable name, method name ,class name or label name.

ex:
	class Test 
	{
		public static void main(String[] args)
		{
			int x = 10;

			System.out.println(x); 
		}
	}

	Here Test,main,args and x are identifiers.

Rules to declare an identifiers
--------------------------------

Rule1:
-----
	Identifiers will accept following characters.
	ex:
		A-Z
		a-z
		0-9
		_
		$

Rule2:
------
	If we take other characters then we will get compile time error.
	ex:
		int emp_id; //valid 
		int emp#name; //invalid 

Rule3:
------
	Identifier must and should starts with alphabet, underscore or dollar symbol but not with 
	digit.
	ex:
		int  a1234; //valid 
		int  _abcd; //valid 
		int  $=10;  //valid 
		int  1abcd; //invalid 

Rule4:
-----
	Every identifier is a case sensitive.
	ex:
		int number;
		int NUMBER;
		int NumBer; 

Rule5:
------
	We can't take reserved words as an identifier name.
	ex:
		int  if; //invalid 
		int  else; //invalid 
		int  for; //invalid 

Rule6:
------
	There is no length limit for an identifier but it not recommanded to take more then 
	15 characters.


Reserved words 
==============
There are some identifiers which are reserved to associate some functionality or meaning such type of identifiers are called reserved words.

Java supports 53 reserved words and it is classified into two types.

Diagram: class7.1

Used keywords with respect to class 
-----------------------------------
import 
package 
enum
class 
interface
extends 
implements 

Used keywords with respect to object
--------------------------------
this
super
new
instanceof

Used keywords with respect to datatypes
-----------------------------------
byte
short
int
long
float
double
boolean
char 

Used keywords with respect to modifiers
-----------------------------------
default
public 
private 
protected
final
static 
abstract
synchronized
strictfp
transient
volatile 
native 

Used keywords with respect to return type
-----------------------------
void 

Used keywords with respect to flow control
------------------------------------------
if
else
for
do
while
break
continue
switch
case 

Used keywords with respect to exception handling
----------------------------------
try 
catch
throw
throws 
finally
assert 









































































































